In these old days, TCP wrappers is a package which is used to provide security features for inetd. Nowadays, xinetd have built-in security features and don't need TCP wrappers to protect it anymore (If you use ldd /usr/sbin/xinetd | grep -i libwrap, libwrap.so.0 => /lib64/libwrap.so.0 (0x00007f060e192000) will still be displayed in the output. It means xinetd uses both TCP wrappers and xinetd's build-in security features).

The TCP wrappers package provides a library known as libwrap. Older TCP wrappers packages used with inetd provided a program known as tcpd. The inetd did not call a server directly; instead, inetd called tcpd, which did two things: It checked whether a client was authorized to access the server, and if the client had this authorization, tcpd called the server program.

Even though inetd has gone the way of the dinosaurs, TCP wrappers is still available for use on Linux systems. For example, the FTP server, vsftpd, uses TCP wrappers. If a network service uses TCP wrappers, then it uses the libwrap library. You can determine if a network service uses TCP wrappers or not by typing 
ldd NetworkServiceDaemon | grep libwrap at the command line. If you get output, then the network service uses TCP wrappers.
        
		[root@localhost ~]# ldd /usr/sbin/vsftpd | grep -i libwrap
        libwrap.so.0 => /lib64/libwrap.so.0 (0x00007f060e192000)
		
		
		 ls /usr/sbin | xargs ldd /usr/sbin/* 
		 You can use above command to list all external libraries of programs in /usr/sbin 
		 
		 

=======================xinetd's built-in security features===================================

Controlling Access via xinetd

Security is handled on a server-by-server basis through the use of configuration parameters
in either /etc/xinetd.conf or the server-specific configuration files. Some of these options
are similar to the function of hosts.allow and hosts.deny:

Network Interface 
The bind option tells xinetd to listen on only one network interface
for the service. For instance, you can specify bind = 192.168.23.7 on a router to have
it listen only on the Ethernet card associated with that address. This feature is extremely
useful in routers, but it isn't as useful in computers with just one network interface. You
can, however, use this option to bind a server only to the loopback interface, 127.0.0.1, if a
server should be available only locally. You might do this with a configuration tool like the
Samba Web Administration Tool (SWAT). A synonym for this option is interface.

Allowed IP or Network Addresses
You can use the only_from option to specify IP
addresses, networks (as in 192.168.78.0/24), or computer names on this line, separated by
spaces. The result is that xinetd will accept connections only from these addresses, similar
to TCP wrappers' hosts.allow entries.

Disallowed IP or Network Addresses
The no_access option is the opposite of only_from;
you list computers or networks here that you want to blacklist. This is similar to the hosts
.deny file of TCP wrappers.

Access Times
The access_times option sets times during which users may access the server.
The time range is specified in the form hour:min-hour:min, using a 24-hour clock. Note that
this option affects only the times during which the server will respond. If the xinetd access_
times option is set to 8:00-17:00 and somebody logs in at 4:59 p.m. (one minute before the
end time), that user may continue using the system well beyond the 5:00 p.m. cutoff time.

You should enter these options into the configuration files in /etc/xinetd.d/ that
correspond to the servers you want to protect. Place the lines between the opening brace
({) and closing brace (}) for the service. If you want to restrict all of your xinetd-controlled
servers, you can place the entries in the defaults section in /etc/xinetd.conf.


Some servers provide access control mechanisms similar to those of TCP
wrappers or xinetd. For instance, Samba provides hosts allow and hosts
deny options that work much like the TCP wrappers file entries. These
options are most common on servers that are awkward or impossible to
run via xinetd.
