the anacrontab file has four columns: The period in days, the delay in minutes, the job identifier, and the command. There is no need to specify a username, as everything runs as rootWhat is the primary purpose of the job identifier in the anacrontab file?It is used to track the last time the job was run.   anacron holds the timestamp of the last run of that job in a file bearing the name of the job identifier            grep run-parts /etc/crontab01 * * * * root run-parts /etc/cron.hourly02 4 * * * root run-parts /etc/cron.daily22 4 * * 0 root run-parts /etc/cron.weekly42 4 1 * * root run-parts /etc/cron.monthlySo cron.daily runs at 04:02am.Cron also searches for /etc/anacrontab . So if you can't find a config for cron.daily on /etc/crontab, you should look for cron.daily in /etc/anacrontab/etc/anacrontab in my system (Fedora 12) :1       5       cron.daily              nice run-parts /etc/cron.daily7       25      cron.weekly             nice run-parts /etc/cron.weekly@monthly 45     cron.monthly            nice run-parts /etc/cron.monthlyThe format of the anacrontab file is still based around columns. The columns are1. Period, in days, between runs of this job. Some of the @nicknames are available.2. Delay, in minutes, that anacron will wait before executing the job.3. A tag, called a job identifier, for the job that is unique across all jobs. Anacron uses this to track the last time the job was run. The third column (cron.daily...) contains the name that the job will be known as in the anacron's messages and log files.  It is the name for the jobâ€™s timestamp file. It should be unique for each job. This will be available as a file under the /var/spool/anacron directory. This file will contain a single line that indicates the last time when this job was executed.4. The command to run.The run-parts command is a simple command that runs every executable located within a specified directory